import { ThoiKhoaBieuRepository } from "../repositories/mongo/thoiKhoaBieuRepository";
import type { DanhSachLop } from "../../node_modules/.prisma/client-mongo";

const tkbRepo = new ThoiKhoaBieuRepository();

/**
 * Test t·∫°o th·ªùi kh√≥a bi·ªÉu m√¥n h·ªçc
 */
async function testCreateTKBMonHoc() {
    console.log("\nüß™ Test: T·∫°o TKB m√¥n h·ªçc m·ªõi");

    try {
        const maHocPhan = "CNPM01";
        const hocKyId = "hk-2024-1";

        const danhSachLop: DanhSachLop[] = [
            {
                tenLop: "CNPM01.01",
                phongHocId: "1b803c32-0f4c-463c-a738-0c3ff90dbff0", // UUID t·ª´ PostgreSQL
                ngayBatDau: new Date("2024-01-08"),
                ngayKetThuc: new Date("2024-05-20"),
                tietBatDau: 1,
                tietKetThuc: 3,
                thuTrongTuan: 2, // Th·ª© 2
            },
            {
                tenLop: "CNPM01.02",
                phongHocId: "2c904d43-1e5d-574d-b849-eb92b8c312f1",
                ngayBatDau: new Date("2024-01-08"),
                ngayKetThuc: new Date("2024-05-20"),
                tietBatDau: 4,
                tietKetThuc: 6,
                thuTrongTuan: 3, // Th·ª© 3
            },
        ];

        const result = await tkbRepo.createTKBMonHoc(maHocPhan, hocKyId, danhSachLop);

        console.log("‚úÖ T·∫°o TKB th√†nh c√¥ng:");
        console.log(JSON.stringify(result, null, 2));

        return result;
    } catch (error) {
        console.error("‚ùå L·ªói:", error);
        throw error;
    }
}

/**
 * Test th√™m l·ªõp v√†o TKB ƒë√£ c√≥
 */
async function testAddLop(tkbId: string) {
    console.log("\nüß™ Test: Th√™m l·ªõp v√†o TKB");

    try {
        const lopMoi: DanhSachLop = {
            tenLop: "CNPM01.03",
            phongHocId: "3d015e54-2f6e-685e-c95a-fc03c9d423g2",
            ngayBatDau: new Date("2024-01-08"),
            ngayKetThuc: new Date("2024-05-20"),
            tietBatDau: 7,
            tietKetThuc: 9,
            thuTrongTuan: 4, // Th·ª© 4
        };

        const result = await tkbRepo.addLop(tkbId, lopMoi);

        console.log("‚úÖ Th√™m l·ªõp th√†nh c√¥ng:");
        console.log(JSON.stringify(result, null, 2));

        return result;
    } catch (error) {
        console.error("‚ùå L·ªói:", error);
        throw error;
    }
}

/**
 * Test upsert l·ªõp
 */
async function testUpsertLop() {
    console.log("\nüß™ Test: Upsert l·ªõp (t·∫°o m·ªõi ho·∫∑c th√™m v√†o)");

    try {
        const maHocPhan = "CNPM02";
        const hocKyId = "hk-2024-1";

        const lopMoi: DanhSachLop = {
            tenLop: "CNPM02.01",
            phongHocId: "4e126f65-3g7f-796f-d06b-gd14d0e534h3",
            ngayBatDau: new Date("2024-01-08"),
            ngayKetThuc: new Date("2024-05-20"),
            tietBatDau: 1,
            tietKetThuc: 3,
            thuTrongTuan: 5, // Th·ª© 5
        };

        const result = await tkbRepo.upsertLop(maHocPhan, hocKyId, lopMoi);

        console.log("‚úÖ Upsert th√†nh c√¥ng:");
        console.log(JSON.stringify(result, null, 2));

        return result;
    } catch (error) {
        console.error("‚ùå L·ªói:", error);
        throw error;
    }
}

/**
 * Test t√¨m TKB theo m√£ h·ªçc ph·∫ßn v√† h·ªçc k·ª≥
 */
async function testFindByMaHocPhanAndHocKy() {
    console.log("\nüß™ Test: T√¨m TKB theo m√£ h·ªçc ph·∫ßn v√† h·ªçc k·ª≥");

    try {
        const maHocPhan = "CNPM01";
        const hocKyId = "hk-2024-1";

        const result = await tkbRepo.findByMaHocPhanAndHocKy(maHocPhan, hocKyId);

        if (result) {
            console.log("‚úÖ T√¨m th·∫•y TKB:");
            console.log(JSON.stringify(result, null, 2));
        } else {
            console.log("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y TKB");
        }

        return result;
    } catch (error) {
        console.error("‚ùå L·ªói:", error);
        throw error;
    }
}

/**
 * Ch·∫°y t·∫•t c·∫£ test
 */
async function runAllTests() {
    console.log("üöÄ B·∫Øt ƒë·∫ßu test TKB M√¥n H·ªçc\n");

    try {
        // Test 1: T·∫°o TKB m·ªõi
        const tkb = await testCreateTKBMonHoc();

        // Test 2: Th√™m l·ªõp
        await testAddLop(tkb.id);

        // Test 3: Upsert l·ªõp
        await testUpsertLop();

        // Test 4: T√¨m TKB
        await testFindByMaHocPhanAndHocKy();

        console.log("\n‚úÖ T·∫•t c·∫£ test ƒë√£ pass!");
    } catch (error) {
        console.error("\n‚ùå Test th·∫•t b·∫°i:", error);
    }
}

// Ch·∫°y test
runAllTests();
